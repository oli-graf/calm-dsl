# THIS FILE IS AUTOMATICALLY GENERATED.
# Disclaimer: Please test this file before using in production.
"""
Generated blueprint DSL (.py)
"""

import json  # no_qa
import os  # no_qa

from calm.dsl.builtins import *  # no_qa


# Secret Variables
BP_CRED_CRED_KEY = read_local_file("BP_CRED_CRED_KEY")
Profile_Nutanix_variable_MYSQL_PASSWORD = read_local_file(
    "Profile_Nutanix_variable_MYSQL_PASSWORD"
)
Profile_Nutanix_variable_WP_DB_PASSWORD = read_local_file(
    "Profile_Nutanix_variable_WP_DB_PASSWORD"
)

# Credentials
BP_CRED_CRED = basic_cred(
    "centos",
    BP_CRED_CRED_KEY,
    name="CRED",
    type="KEY",
    default=True,
    editables={"username": True, "secret": True},
)


class MYSQL(Service):
    @action
    def __create__():
        """System action for creating an application"""

        CalmTask.Exec.ssh(
            name="CreateWordPressDB",
            filename=os.path.join(
                "scripts", "Service_MYSQL_Action___create___Task_CreateWordPressDB.sh"
            ),
            cred=ref(BP_CRED_CRED),
            target=ref(MYSQL),
        )


class vmnamesqlvmnumsqlResources(AhvVmResources):

    memory = 4
    vCPUs = 1
    cores_per_vCPU = 2
    disks = [
        AhvVmDisk.Disk.Scsi.cloneFromImageService(
            "Rocky-9-GenericCloud-Base.latest.x86_64.qcow2", bootable=True
        )
    ]
    nics = [AhvVmNic.NormalNic.ingress("SERVER-GP", cluster="nutanix-cl1")]

    guest_customization = AhvVmGC.CloudInit(
        filename=os.path.join("specs", "vmnamesqlvmnumsql_cloud_init_data.yaml")
    )


class vmnamesqlvmnumsql(AhvVm):

    name = "@@{vmnamesql}@@-@@{vmnumsql}@@"
    resources = vmnamesqlvmnumsqlResources
    cluster = Ref.Cluster(name="nutanixcl1")


class MYSQLAHV(Substrate):

    os_type = "Linux"
    provider_type = "AHV_VM"
    provider_spec = vmnamesqlvmnumsql

    readiness_probe = readiness_probe(
        connection_type="SSH",
        disabled=False,
        retries="5",
        connection_port=22,
        address="@@{platform.status.resources.nic_list[0].ip_endpoint_list[0].ip}@@",
        delay_secs="60",
        credential=ref(BP_CRED_CRED),
    )


class vmnamewebvmnumwebResources(AhvVmResources):

    memory = 4
    vCPUs = 1
    cores_per_vCPU = 2
    disks = [
        AhvVmDisk.Disk.Scsi.cloneFromImageService(
            "Rocky-9-GenericCloud-Base.latest.x86_64.qcow2", bootable=True
        )
    ]
    nics = [AhvVmNic.NormalNic.ingress("SERVER-GP", cluster="nutanix-cl1")]

    guest_customization = AhvVmGC.CloudInit(
        filename=os.path.join("specs", "vmnamewebvmnumweb_cloud_init_data.yaml")
    )


class vmnamewebvmnumweb(AhvVm):

    name = "@@{vmnameweb}@@-@@{vmnumweb}@@"
    resources = vmnamewebvmnumwebResources
    cluster = Ref.Cluster(name="nutanixcl1")


class AHV_WORDPRESS(Substrate):

    os_type = "Linux"
    provider_type = "AHV_VM"
    provider_spec = vmnamewebvmnumweb

    readiness_probe = readiness_probe(
        connection_type="SSH",
        disabled=False,
        retries="5",
        connection_port=22,
        address="@@{platform.status.resources.nic_list[0].ip_endpoint_list[0].ip}@@",
        delay_secs="60",
        credential=ref(BP_CRED_CRED),
    )


class vmnameproxvmnumproxResources(AhvVmResources):

    memory = 4
    vCPUs = 1
    cores_per_vCPU = 2
    disks = [
        AhvVmDisk.Disk.Scsi.cloneFromImageService(
            "Rocky-9-GenericCloud-Base.latest.x86_64.qcow2", bootable=True
        )
    ]
    nics = [AhvVmNic.NormalNic.ingress("SERVER-GP", cluster="nutanix-cl1")]

    guest_customization = AhvVmGC.CloudInit(
        filename=os.path.join("specs", "vmnameproxvmnumprox_cloud_init_data.yaml")
    )


class vmnameproxvmnumprox(AhvVm):

    name = "@@{vmnameprox}@@-@@{vmnumprox}@@"
    resources = vmnameproxvmnumproxResources
    cluster = Ref.Cluster(name="nutanixcl1")


class HAPROXYAHV(Substrate):

    os_type = "Linux"
    provider_type = "AHV_VM"
    provider_spec = vmnameproxvmnumprox

    readiness_probe = readiness_probe(
        connection_type="SSH",
        disabled=False,
        retries="5",
        connection_port=22,
        address="@@{platform.status.resources.nic_list[0].ip_endpoint_list[0].ip}@@",
        delay_secs="60",
        credential=ref(BP_CRED_CRED),
    )


class APACHE_PHP(Service):

    dependencies = [ref(MYSQL)]

    @action
    def __create__():
        """System action for creating an application"""

        CalmTask.Exec.ssh(
            name="ConfigureWordpress",
            filename=os.path.join(
                "scripts",
                "Service_APACHE_PHP_Action___create___Task_ConfigureWordpress.sh",
            ),
            cred=ref(BP_CRED_CRED),
            target=ref(APACHE_PHP),
        )


class MYSQL_PACKAGE(Package):

    services = [ref(MYSQL)]

    @action
    def __install__():

        CalmTask.Exec.ssh(
            name="PackageInstallTask",
            filename=os.path.join(
                "scripts",
                "Package_MYSQL_PACKAGE_Action___install___Task_PackageInstallTask.sh",
            ),
            cred=ref(BP_CRED_CRED),
            target=ref(MYSQL_PACKAGE),
        )


class HAPROXY(Service):

    dependencies = [ref(APACHE_PHP)]


class APACHE_PHP_PACKAGE(Package):

    services = [ref(APACHE_PHP)]

    @action
    def __install__():

        CalmTask.Exec.ssh(
            name="PackageInstallTask",
            filename=os.path.join(
                "scripts",
                "Package_APACHE_PHP_PACKAGE_Action___install___Task_PackageInstallTask.sh",
            ),
            cred=ref(BP_CRED_CRED),
            target=ref(APACHE_PHP_PACKAGE),
        )


class cbc66a9b_deployment(Deployment):

    min_replicas = "1"
    max_replicas = "1"
    default_replicas = "1"

    packages = [ref(MYSQL_PACKAGE)]
    substrate = ref(MYSQLAHV)


class HAPROXY_PACKAGE(Package):

    services = [ref(HAPROXY)]

    @action
    def __install__():

        CalmTask.Exec.ssh(
            name="PackageInstallTask",
            filename=os.path.join(
                "scripts",
                "Package_HAPROXY_PACKAGE_Action___install___Task_PackageInstallTask.sh",
            ),
            cred=ref(BP_CRED_CRED),
            target=ref(HAPROXY_PACKAGE),
        )


class _7df0cc1c_deployment(Deployment):

    name = "7df0cc1c_deployment"
    min_replicas = "1"
    max_replicas = "1"
    default_replicas = "1"

    packages = [ref(APACHE_PHP_PACKAGE)]
    substrate = ref(AHV_WORDPRESS)
    editables = {
        "min_replicas": False,
        "default_replicas": False,
        "max_replicas": False,
    }


class _4d96f2c3_deployment(Deployment):

    name = "4d96f2c3_deployment"
    min_replicas = "1"
    max_replicas = "1"
    default_replicas = "1"

    packages = [ref(HAPROXY_PACKAGE)]
    substrate = ref(HAPROXYAHV)


class Nutanix(Profile):

    deployments = [cbc66a9b_deployment, _7df0cc1c_deployment, _4d96f2c3_deployment]

    MYSQL_PASSWORD = CalmVariable.Simple.Secret(
        Profile_Nutanix_variable_MYSQL_PASSWORD,
        label="",
        is_mandatory=False,
        is_hidden=False,
        runtime=True,
        description="",
    )

    WP_DB_USER = CalmVariable.Simple(
        "wordpress",
        label="",
        is_mandatory=False,
        is_hidden=False,
        runtime=True,
        description="",
    )

    WP_DB_PASSWORD = CalmVariable.Simple.Secret(
        Profile_Nutanix_variable_WP_DB_PASSWORD,
        label="",
        is_mandatory=False,
        is_hidden=False,
        runtime=True,
        description="",
    )

    vmnamesql = CalmVariable.Simple(
        "", label="", is_mandatory=False, is_hidden=False, runtime=True, description=""
    )

    vmnumsql = CalmVariable.Simple(
        "", label="", is_mandatory=False, is_hidden=False, runtime=True, description=""
    )

    vmnameweb = CalmVariable.Simple(
        "", label="", is_mandatory=False, is_hidden=False, runtime=True, description=""
    )

    vmnumweb = CalmVariable.Simple(
        "", label="", is_mandatory=False, is_hidden=False, runtime=True, description=""
    )

    vmnameprox = CalmVariable.Simple(
        "", label="", is_mandatory=False, is_hidden=False, runtime=True, description=""
    )

    vmnumprox = CalmVariable.Simple(
        "", label="", is_mandatory=False, is_hidden=False, runtime=True, description=""
    )

    HOSTNAMESQL = CalmVariable.Simple(
        "", label="", is_mandatory=False, is_hidden=False, runtime=True, description=""
    )

    HOSTNAMEWP = CalmVariable.Simple(
        "", label="", is_mandatory=False, is_hidden=False, runtime=True, description=""
    )

    HOSTNAMEPROXY = CalmVariable.Simple(
        "", label="", is_mandatory=False, is_hidden=False, runtime=True, description=""
    )


class Wordpress(Blueprint):

    services = [MYSQL, APACHE_PHP, HAPROXY]
    packages = [MYSQL_PACKAGE, APACHE_PHP_PACKAGE, HAPROXY_PACKAGE]
    substrates = [MYSQLAHV, AHV_WORDPRESS, HAPROXYAHV]
    profiles = [Nutanix]
    credentials = [BP_CRED_CRED]


class BpMetadata(Metadata):

    categories = {"AppFamily": "DevOps"}
