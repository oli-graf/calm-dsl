# THIS FILE IS AUTOMATICALLY GENERATED.
# Disclaimer: Please test this file before using in production.
"""
Generated blueprint DSL (.py)
"""

import json  # no_qa
import os  # no_qa

from calm.dsl.builtins import *  # no_qa


# Secret Variables
BP_CRED_useradmin_KEY = read_local_file("BP_CRED_useradmin_KEY")

# Credentials
BP_CRED_useradmin = basic_cred(
    "rockyadmin",
    BP_CRED_useradmin_KEY,
    name="useradmin",
    type="KEY",
    default=True,
    editables={"username": True, "secret": True},
)


class Service1(Service):

    pass


class vmnamevmnumResources(AhvVmResources):

    memory = 4
    vCPUs = 1
    cores_per_vCPU = 1
    disks = [
        AhvVmDisk.Disk.Scsi.cloneFromImageService(
            "Rocky-9-GenericCloud-Base.latest.x86_64.qcow2", bootable=True
        )
    ]
    nics = [AhvVmNic.NormalNic.ingress("SERVER-GP", cluster="nutanix-cl1")]

    guest_customization = AhvVmGC.CloudInit(
        filename=os.path.join("specs", "vmnamevmnum_cloud_init_data.yaml")
    )


class vmnamevmnum(AhvVm):

    name = "@@{vmname}@@-@@{vmnum}@@"
    resources = vmnamevmnumResources
    cluster = Ref.Cluster(name="nutanixcl1")


class OGRFEDOSRV(Substrate):

    os_type = "Linux"
    provider_type = "AHV_VM"
    provider_spec = vmnamevmnum

    readiness_probe = readiness_probe(
        connection_type="SSH",
        disabled=True,
        retries="5",
        connection_port=22,
        address="@@{platform.status.resources.nic_list[0].ip_endpoint_list[0].ip}@@",
        delay_secs="60",
        credential=ref(BP_CRED_useradmin),
    )


class Package1(Package):

    services = [ref(Service1)]

    @action
    def __install__():

        CalmTask.Exec.ssh(
            name="pkginstall",
            filename=os.path.join(
                "scripts", "Package_Package1_Action___install___Task_pkginstall.sh"
            ),
            cred=ref(BP_CRED_useradmin),
            target=ref(Service1),
        )


class fa492b96_deployment(Deployment):

    min_replicas = "1"
    max_replicas = "1"
    default_replicas = "1"

    packages = [ref(Package1)]
    substrate = ref(OGRFEDOSRV)


class Default(Profile):

    deployments = [fa492b96_deployment]

    HOSTNAME = CalmVariable.Simple(
        "", label="", is_mandatory=False, is_hidden=False, runtime=True, description=""
    )

    vmnum = CalmVariable.Simple(
        "", label="", is_mandatory=False, is_hidden=False, runtime=True, description=""
    )

    vmname = CalmVariable.Simple(
        "", label="", is_mandatory=False, is_hidden=False, runtime=True, description=""
    )

    INSTANCE_PUBLIC_KEY = CalmVariable.Simple(
        "", label="", is_mandatory=False, is_hidden=False, runtime=True, description=""
    )

    username = CalmVariable.Simple(
        "", label="", is_mandatory=False, is_hidden=False, runtime=True, description=""
    )


class ROCKYSBP(Blueprint):

    services = [Service1]
    packages = [Package1]
    substrates = [OGRFEDOSRV]
    profiles = [Default]
    credentials = [BP_CRED_useradmin]


class BpMetadata(Metadata):

    categories = {"TemplateType": "Vm"}
